{
   "arch": "x86_64",
   "hostname":"{hostname}",
   "password":{
      "crypted":false,
      "text":"${ssh_password}"
   },
   "disk":"/dev/${target_disk}",
   "partitions":[
%{ if "${bootmode}" == "efi" ~}
%{ if "${use_lvm}" == "true" ~}
       {"mountpoint": "/", "size": 0, "filesystem": "ext4", "lvm":{"vg_name":"vg1", "lv_name":"rootfs"}},
       {"mountpoint": "/boot", "size": ${boot_partition_size}, "filesystem": "ext4"},
       {"mountpoint": "/root", "size": ${root_partition_size}, "filesystem": "ext4","lvm":{"vg_name":"vg1", "lv_name":"root"}},
       {"size": ${swap_partition_size}, "filesystem": "swap","lvm":{"vg_name":"vg2", "lv_name":"swap"}}
%{ else ~}
	   {"mountpoint": "/", "size": 0, "filesystem": "ext4"},
	   {"mountpoint": "/boot", "size": ${boot_partition_size}, "filesystem": "ext4"},
	   {"mountpoint": "/root", "size": ${root_partition_size}, "filesystem": "ext4"},
	   {"size": ${swap_partition_size}, "filesystem": "swap"}   
%{ endif ~}
%{ else ~}
%{ if "${use_lvm}" == "true" ~}
       { "mountpoint":"/", "size":0, "filesystem":"ext4", "lvm":{ "vg_name":"vg1", "lv_name":"rootfs" } },
       { "mountpoint":"/boot", "size":${boot_partition_size}, "filesystem":"ext4" },
       { "mountpoint":"/root", "size":${root_partition_size}, "filesystem":"ext4", "lvm":{ "vg_name":"vg1", "lv_name":"root" } },
       { "size":128, "filesystem":"swap", "lvm":{ "vg_name":"vg2", "lv_name":"swap" } }
%{ else ~}
       { "mountpoint":"/", "size":0, "filesystem":"ext4" },
       { "mountpoint":"/boot", "size":${boot_partition_size}, "filesystem":"ext4" },
       { "mountpoint":"/root", "size":${root_partition_size}, "filesystem":"ext4" },
       { "size":${swap_partition_size}, "filesystem":"swap" }
%{ endif ~}
%{ endif ~}
   ],
   "bootmode":"${bootmode}",
   "linux_flavor":"linux",
   "packagelist_file":"packages_minimal.json",
   "postinstall":[
      "#!/bin/bash -x",
      "sed -i 's/PermitRootLogin no/PermitRootLogin yes/g' /etc/ssh/sshd_config",
      "sed -i 's/.*MaxAuthTries.*/MaxAuthTries 10/g' /etc/ssh/sshd_config",
%{ if "${provider}" == "hyperv" ~}
	  "tdnf install -y hyper-v",
      "systemctl enable hv_fcopy_daemon",
      "systemctl enable hv_vss_daemon",
	  "systemctl enable hv_kvp_daemon",
	  "systemctl disable vmtoolsd",
%{ endif ~}
%{ if "${provider}" != "vmware" ~}
  	  "tdnf remove -y open_vm_tools",
%{ endif ~}
%{ if "${provider}" == "proxmox" ~}
      "echo '[Unit]'                                              | tee    /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'Description=Build and Install qemu-guest-agent'      | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'After=network-online.target'                         | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'ConditionPathExists=/root/build-qemu-guest-agent.sh' | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo ''                                                    | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo '[Service]'                                           | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'ExecStart=/root/build-qemu-guest-agent.sh'           | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'RemainAfterExit=true'                                | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'Type=oneshot'                                        | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo ''                                                    | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo '[Install]'                                           | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo 'WantedBy=multi-user.target'                          | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "echo ''                                                    | tee -a /etc/systemd/system/install-qemu-guest-agent.service",
      "systemctl enable install-qemu-guest-agent",
      "echo '[Unit]'                                                     | tee    /root/qemu-guest-agent.service",
      "echo 'Description=QEMU Guest Agent'                               | tee -a /root/qemu-guest-agent.service",
      "echo 'BindsTo=dev-virtio\\x2dports-org.qemu.guest_agent.0.device' | tee -a /root/qemu-guest-agent.service",
      "echo 'After=dev-virtio\\x2dports-org.qemu.guest_agent.0.device'   | tee -a /root/qemu-guest-agent.service",
      "echo ''                                                           | tee -a /root/qemu-guest-agent.service",
      "echo '[Service]'                                                  | tee -a /root/qemu-guest-agent.service",
      "echo 'ExecStart=-/usr/bin/qemu-ga'                                | tee -a /root/qemu-guest-agent.service",
      "echo 'Restart=always'                                             | tee -a /root/qemu-guest-agent.service",
      "echo 'RestartSec=0'                                               | tee -a /root/qemu-guest-agent.service",
      "echo ''                                                           | tee -a /root/qemu-guest-agent.service",
      "echo '[Install]'                                                  | tee -a /root/qemu-guest-agent.service",
      "echo 'WantedBy=multi-user.target'                                 | tee -a /root/qemu-guest-agent.service",
	  "touch /root/build-qemu-guest-agent.sh",
	  "chmod +x /root/build-qemu-guest-agent.sh",
	  "touch /root/build-qemu-guest-agent.sh",
	  "echo '#!/bin/bash -eux'                                                                                     | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'if [ ! -f /root/qemu-guest-agent.service ]; then'                                                     | tee -a /root/build-qemu-guest-agent.sh",
	  "echo '  exit 0'                                                                                             | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'fi'                                                                                                   | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'mv /root/qemu-guest-agent.service /etc/systemd/system/qemu-guest-agent.service'                       | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'tdnf update -y'                                                                                       | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'tdnf -y install wget git'                                                                             | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'systemctl start docker || true'                                                                       | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'mkdir /var/qemu-guest-agent-build'                                                                    | tee -a /root/build-qemu-guest-agent.sh",
      "echo 'cd /var/qemu-guest-agent-build'                                                                       | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'git clone https://github.com/vmware/photon.git'                                                       | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'git clone https://github.com/snapshotleisure/photon-os-qemu-guest-agent.git'                          | tee -a /root/build-qemu-guest-agent.sh",
      "echo './photon/tools/scripts/build_spec.sh ./photon-os-qemu-guest-agent/src/qemu-guest-agent.spec ./output' | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'tdnf install -y ./output/RPMS/x86_64/qemu-guest-agent-8.1.0-1.ph5.x86_64.rpm'                         | tee -a /root/build-qemu-guest-agent.sh",
      "echo 'systemctl enable qemu-guest-agent'                                                                    | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'systemctl start qemu-guest-agent'                                                                     | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'systemctl stop docker'                                                                                | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'cd /root'                                                                                             | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'rm -rf /var/qemu-guest-agent-build'                                                                   | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'systemctl disable install-qemu-guest-agent || true'                                                   | tee -a /root/build-qemu-guest-agent.sh",
	  "echo 'systemctl restart sshd'                                                                               | tee -a /root/build-qemu-guest-agent.sh",
%{ endif ~}
      "chage -I -1 -m 0 -M 99999 -E -1 ${ssh_username}"
   ]
}